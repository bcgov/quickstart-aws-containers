name: .Terraform Destroyer

on:
  workflow_call:
    inputs:
      ### Required
      environment_name:
        description: 'The name of the environment to destroy resources from dev or test or prod(BE CAREFUL HERE)'
        required: true
        default: 'dev'
        type: string
      app_env:
        required: false
        type: string
        description: 'The APP env separates between AWS ENV and Actual APP, since AWS dev is where PR, and TEST is deployed'
      AWS_DEPLOY_ROLE_ARN: 
        description: 'The ARN of the role to assume to deploy to AWS'
        required: true
        type: string
      AWS_LICENSE_PLATE: 
        description: 'The license plate of the car to deploy to AWS, it is without the `-env`'
        type: string
        required: true
jobs:
  cleanup-aws-database:
    name: Cleanup AWS Database
    uses: ./.github/workflows/.deployer.yml
    with:
      environment_name: ${{ inputs.environment_name}}
      command: destroy
      working_directory: database
      AWS_DEPLOY_ROLE_ARN: ${{ inputs.AWS_DEPLOY_ROLE_ARN }}
      AWS_LICENSE_PLATE: ${{ inputs.AWS_LICENSE_PLATE }}
  cleanup-aws-api:
      name: Cleanup AWS API
      uses: ./.github/workflows/.deployer.yml
      with:
        environment_name: ${{ inputs.environment_name}}
        command: destroy
        working_directory: api
        app_env: ${{ inputs.app_env}}
        AWS_DEPLOY_ROLE_ARN: ${{ inputs.AWS_DEPLOY_ROLE_ARN }}
        AWS_LICENSE_PLATE: ${{ inputs.AWS_LICENSE_PLATE }}
  cleanup-aws-cf:
      name: Cleanup AWS CF
      uses: ./.github/workflows/.deployer.yml
      with:
        environment_name: ${{ inputs.environment_name}}
        command: destroy
        working_directory: frontend
        app_env: ${{ inputs.app_env}}
        AWS_DEPLOY_ROLE_ARN: ${{ inputs.AWS_DEPLOY_ROLE_ARN }}
        AWS_LICENSE_PLATE: ${{ inputs.AWS_LICENSE_PLATE }}