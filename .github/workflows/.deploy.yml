name: .Deploy to Aws
on:
  workflow_call:
    inputs:
      ### Required
      environment_name:
        description: 'The name of the environment to deploy to'
        required: true
        default: 'dev'
        type: string
      tag:
        description: 'The tag of the containers to deploy'
        default: 'latest'
        type: string
        required: false
      app_env:
        required: false
        type: string
        description: 'The APP env separates between AWS ENV and Actual APP, since AWS dev is where PR, and TEST is deployed'
      aws_region:
        description: 'The AWS region to deploy to'
        required: false
        default: 'ca-central-1'
        type: string
    outputs:
      API_GW_URL: 
        value: ${{ jobs.deploy-api.outputs.API_GW_URL }}

    secrets:
      AWS_DEPLOY_ROLE_ARN: 
        description: 'The ARN of the role to assume to deploy to AWS'
        required: true
      AWS_LICENSE_PLATE: 
        description: 'The license plate of the car to deploy to AWS, it is without the `-env`'
        required: true
jobs:
  vars:
    name: Set Variables
    outputs:
      aws_arn: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
      aws_license_plate: ${{ secrets.AWS_LICENSE_PLATE }}
    runs-on: ubuntu-24.04
    timeout-minutes: 1
    steps:
      - name: checkout
        id: checkout
        uses: actions/checkout@v4
  # https://github.com/bcgov/quickstart-openshift-helpers
  deploy-db:
    name: Deploys Database
    needs: [vars]
    uses: ./.github/workflows/.deployer.yml
    with:
      environment_name: ${{ inputs.environment_name}}
      command: apply
      working_directory: database
      app_env: ${{ inputs.environment_name}} # Database 
      AWS_DEPLOY_ROLE_ARN: ${{ needs.vars.outputs.aws_arn }}
      AWS_LICENSE_PLATE: ${{ needs.vars.outputs.aws_license_plate }}
  deploy-api:
    name: Deploys API
    needs: [vars, deploy-db]
    uses: ./.github/workflows/.deployer.yml
    with:
      environment_name: ${{ inputs.environment_name}}
      command: apply
      working_directory: api
      tag: ${{ inputs.tag }}
      app_env: ${{ inputs.app_env}}
      AWS_DEPLOY_ROLE_ARN: ${{ needs.vars.outputs.aws_arn }}
      AWS_LICENSE_PLATE: ${{ needs.vars.outputs.aws_license_plate }}
  